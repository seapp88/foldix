name: Build Pipeline

on:
  workflow_run:
    workflows: ["Release Pipeline"]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Set up Tauri dependencies
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt update && sudo apt install -y libwebkit2gtk-4.0-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev;
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install gtk+3;
          fi

      - name: Build for ${{ matrix.os }}
        run: npm run tauri build

      - name: Upload artifact for ${{ matrix.os }}
        uses: actions/upload-artifact@v3
        with:
          name: foldix-${{ matrix.os }}
          path: |
            src-tauri/target/release/bundle/appimage/*.AppImage
            src-tauri/target/release/bundle/deb/*.deb
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/exe/*.exe

  upload-release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: foldix-ubuntu-latest
          path: ./builds/linux

      - name: Download macOS artifact
        uses: actions/download-artifact@v3
        with:
          name: foldix-macos-latest
          path: ./builds/macos

      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: foldix-windows-latest
          path: ./builds/windows

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: "Release ${{ github.sha }}"
          draft: false
          prerelease: false

      - name: Upload Linux asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./builds/linux/foldix.AppImage
          asset_name: foldix.AppImage
          asset_content_type: application/octet-stream

      - name: Upload macOS asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./builds/macos/foldix.dmg
          asset_name: foldix.dmg
          asset_content_type: application/octet-stream

      - name: Upload Windows asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./builds/windows/foldix.exe
          asset_name: foldix.exe
          asset_content_type: application/octet-stream